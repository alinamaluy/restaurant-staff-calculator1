import streamlit as st
import pandas as pd
from math import ceil
from datetime import datetime

# üéØ –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
def calculate_staff_from_orders(
    orders_per_day,
    order_norm_per_waiter,
    shifts_per_day,
    restaurant_days_per_week,
    waiter_days_per_week,
    shifts_per_waiter_per_day,
    position="–û—Ñ–∏—Ü–∏–∞–Ω—Ç"
):
    total_orders_per_week = orders_per_day * restaurant_days_per_week
    orders_per_shift = orders_per_day / shifts_per_day
    waiters_per_shift = ceil(orders_per_shift / order_norm_per_waiter)
    total_weekly_shifts = waiters_per_shift * shifts_per_day * restaurant_days_per_week
    effective_shifts_per_waiter = waiter_days_per_week * shifts_per_waiter_per_day
    required_waiters = ceil(total_weekly_shifts / effective_shifts_per_waiter)

    data = {
        "–î–æ–ª–∂–Ω–æ—Å—Ç—å": position,
        "–ó–∞–∫–∞–∑–æ–≤ –≤ –¥–µ–Ω—å": f"{orders_per_day}",
        "–°–º–µ–Ω –≤ –¥–µ–Ω—å": f"{shifts_per_day}",
        "–ù–æ—Ä–º–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ 1 –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞": f"{order_norm_per_waiter}",
        "–ó–∞–∫–∞–∑–æ–≤ –≤ —Å–º–µ–Ω—É": f"{orders_per_shift:.1f}",
        "–û—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤ –Ω–∞ —Å–º–µ–Ω—É": f"{waiters_per_shift}",
        "–°–º–µ–Ω –≤ –Ω–µ–¥–µ–ª—é (–≤—Å–µ–≥–æ)": f"{total_weekly_shifts}",
        "–°–º–µ–Ω –≤ –Ω–µ–¥–µ–ª—é (1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫)": f"{effective_shifts_per_waiter}",
        "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤": f"{required_waiters}"
    }

    return pd.DataFrame.from_dict(data, orient='index', columns=["–ó–Ω–∞—á–µ–Ω–∏–µ"])

# üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.set_page_config(page_title="–†–∞—Å—á–µ—Ç —à—Ç–∞—Ç–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º", layout="centered")
st.title("üìä –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞")
st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∏–∂–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤:")

with st.form("input_form"):
    position = st.text_input("–î–æ–ª–∂–Ω–æ—Å—Ç—å", value="–û—Ñ–∏—Ü–∏–∞–Ω—Ç")
    orders_per_day = st.slider("–ó–∞–∫–∞–∑–æ–≤ –≤ –¥–µ–Ω—å", 20, 500, 120, step=10)
    order_norm = st.slider("–ù–æ—Ä–º–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ 1 –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞", 10, 100, 30, step=5)
    shifts_per_day = st.slider("–°–º–µ–Ω –≤ –¥–µ–Ω—å", 1, 3, 2)
    restaurant_days = st.slider("–î–Ω–µ–π —Ä–∞–±–æ—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –≤ –Ω–µ–¥–µ–ª—é", 1, 7, 7)
    waiter_days = st.slider("–î–Ω–µ–π —Ä–∞–±–æ—Ç—ã 1 –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ –≤ –Ω–µ–¥–µ–ª—é", 1, 7, 5)
    shifts_per_waiter = st.slider("–°–º–µ–Ω –≤ –¥–µ–Ω—å –Ω–∞ 1 –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞", 1, 2, 1)

    submitted = st.form_submit_button("üîç –†–∞—Å—Å—á–∏—Ç–∞—Ç—å")

if submitted:
    df = calculate_staff_from_orders(
        orders_per_day,
        order_norm,
        shifts_per_day,
        restaurant_days,
        waiter_days,
        shifts_per_waiter,
        position
    )

    st.success("‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    st.dataframe(df)

    # üíæ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Excel
    now = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"staff_calculation_{now}.xlsx"
    df.to_excel(filename)

    with open(filename, "rb") as f:
        st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Excel", f, file_name=filename)
